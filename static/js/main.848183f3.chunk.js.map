{"version":3,"sources":["logo.svg","hooks/useWindowSize.js","hooks/useModal.js","components/Calculator/CalculatorModal/index.js","components/Calculator/configs.js","components/Calculator/CalculatorBtn/index.js","components/Calculator/CalculatorScreen/index.js","components/Calculator/index.js","redux/slices/calculator.js","components/Calculator/CalculatorHook.js","components/Calculator/CalculatorModal/CalculatorHookModal.js","components/Calculator/CalculatorRedux.js","components/Calculator/CalculatorModal/CalculatorReduxModal.js","App.js","redux/store.js","serviceWorker.js","index.js"],"names":["module","exports","initSize","width","height","WindowSizeContext","createContext","useWindowSize","useState","size","setSize","useEffect","updateSize","window","innerWidth","innerHeight","addEventListener","debounce","removeEventListener","useModal","initState","modalIsOpen","setIsOpen","openModal","useCallback","closeModal","CalculatorModal","props","isDisableDraggable","useContext","dragContainerPosition","x","y","children","handleModalClose","e","target","className","isOpen","shouldCloseOnOverlayClick","onRequestClose","contentLabel","overlayClassName","onClick","bounds","disabled","position","defaultProps","type","op","CalculatorBtn","currentOp","style","content","btnClassName","ClassNames","onClickHandler","preventDefault","onMouseUp","onTouchEnd","CalculatorScreen","result","Calculator","btnConfigs","configs","map","btnConfig","key","operations","add","prev","next","Number","parseFloat","subtract","multiply","divide","opHandlers","default","state","payload","prevResult","prevType","percentage","toString","equal","final","toLocaleString","minimumFractionDigits","maximumFractionDigits","clear","sign","indexOf","replace","numHandlers","dot","calculatorHandlers","num","action","calculatorSlice","createSlice","name","initialState","reducers","calculatorActions","actions","selectCalculator","calculator","CalculatorHook","setOp","setResult","setPrevResult","setPrevType","data","CalculatorHookModal","CalculatorRedux","useSelector","dispatch","useDispatch","CalculatorReduxModal","ReactModal","setAppElement","App","reduxModalIsOpen","openReduxModal","closeReduxModal","Provider","value","src","logo","alt","configureStore","reducer","calculatorReducer","Boolean","location","hostname","match","ReactDOM","render","StrictMode","store","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"0HAAAA,EAAOC,QAAU,IAA0B,kC,6RCGrCC,EAAW,CACfC,MAAO,EACPC,OAAQ,GAEGC,EAAoBC,wBAAcJ,GAyBhCK,MAvBf,WAA0B,IAAD,EACCC,mBAASN,GADV,mBAChBO,EADgB,KACVC,EADU,KAiBvB,OAdAC,qBAAU,WACR,SAASC,IACPF,EAAQ,CACNP,MAAOU,OAAOC,WACdV,OAAQS,OAAOE,cAOnB,OAHAF,OAAOG,iBAAiB,SAAUC,IAASL,GAAa,KACxDA,IAEO,kBAAMC,OAAOK,oBAAoB,SAAUN,MACjD,IAEI,CACLH,OACAJ,sBCPWc,MAnBf,WAAsC,IAApBC,EAAmB,0DACFZ,mBAASY,GADP,mBAC5BC,EAD4B,KACfC,EADe,KAG7BC,EAAYC,uBAAY,WAC5BF,GAAU,KACT,CAACA,IAEEG,EAAaD,uBAAY,WAC7BF,GAAU,KACT,CAACA,IAEJ,MAAO,CACLD,cACAE,YACAE,aACAH,c,iBCTEI,G,MAAkB,SAACC,GAAW,IAE5BC,EADYC,qBAAWxB,GAArBF,OAC4B,IAC9B2B,EAAwBF,EAAqB,CAAEG,EAAG,EAAGC,EAAE,GAAM,KAEjEX,EAGEM,EAHFN,YACAI,EAEEE,EAFFF,WACAQ,EACEN,EADFM,SAGIC,EAAmBV,uBAAY,SAACW,GACT,mCAAvBA,EAAEC,OAAOC,WAEbZ,MACC,CAACA,IAEJ,OACE,kBAAC,IAAD,CACEa,OAAQjB,EACRkB,2BAA2B,EAC3BC,eAAgBf,EAChBgB,aAAa,mBACbJ,UAAU,qBACVK,iBAAiB,sBAEjB,yBAAKL,UAAU,iCACbM,QAAST,GAET,kBAAC,IAAD,CACEU,OAAO,SACPC,SAAUjB,EACVkB,SAAUhB,GAEV,6BACGG,QAYbP,EAAgBqB,aAAe,CAC7B1B,aAAa,EACbI,WAAY,cAGCC,QC3DA,EACP,CACJ,CACEsB,KAAM,KACNC,GAAI,QACJhB,SAAU,MAEZ,CACEe,KAAM,KACNC,GAAI,OACJhB,SAAU,OAEZ,CACEe,KAAM,KACNC,GAAI,aACJhB,SAAU,KAEZ,CACEe,KAAM,KACNC,GAAI,SACJhB,SAAU,KAEZ,CACEe,KAAM,MACNC,GAAI,GAEN,CACED,KAAM,MACNC,GAAI,GAEN,CACED,KAAM,MACNC,GAAI,GAEN,CACED,KAAM,KACNC,GAAI,WACJhB,SAAU,KAEZ,CACEe,KAAM,MACNC,GAAI,GAEN,CACED,KAAM,MACNC,GAAI,GAEN,CACED,KAAM,MACNC,GAAI,GAEN,CACED,KAAM,KACNC,GAAI,WACJhB,SAAU,KAEZ,CACEe,KAAM,MACNC,GAAI,GAEN,CACED,KAAM,MACNC,GAAI,GAEN,CACED,KAAM,MACNC,GAAI,GAEN,CACED,KAAM,KACNC,GAAI,MACJhB,SAAU,KAEZ,CACEe,KAAM,MACNC,GAAI,GAEN,CACED,KAAM,MACNC,GAAI,MACJhB,SAAU,KAEZ,CACEe,KAAM,KACNC,GAAI,QACJhB,SAAU,M,8BChFhB,SAASiB,EAAcvB,GAAQ,IAAD,EAE1BM,EAMEN,EANFM,SACAe,EAKErB,EALFqB,KACAC,EAIEtB,EAJFsB,GACAE,EAGExB,EAHFwB,UACAC,EAEEzB,EAFFyB,MACAT,EACEhB,EADFgB,QAEIU,EAAUpB,GAAYgB,EACtBK,EAAeC,IACnB,WAD6B,sCAGdP,KAAWA,GAHG,cAI3B,uBAAwBG,IAAcF,GAJX,IAQzBO,EAAiBhC,uBAAY,SAACW,GAClCA,EAAEsB,iBACFd,EAAQR,EACN,CACEa,OACAC,SAGH,CAACD,EAAMC,EAAIN,IAEd,OAAoB,OAAZU,GACN,4BAAQhB,UAAWiB,EAAcI,UAAWF,EAAgBG,WAAYH,EAAgBJ,MAAOA,GAC7F,yBAAKf,UAAU,gBACZgB,IAkBTH,EAAcH,aAAe,CAC3Bd,SAAU,KACVU,QAAS,cAGIO,Q,MCvDf,SAASU,EAAiBjC,GAAQ,IAE9BkC,EACElC,EADFkC,OAGF,OACE,yBAAKxB,UAAU,cACb,yBAAKA,UAAU,sBAAsBwB,KAY3CD,EAAiBb,aAAe,CAC9Bc,OAAQ,MAGKD,Q,MCnBf,SAASE,EAAWnC,GAClB,IAAMoC,EAAaC,EAEjBf,EAGEtB,EAHFsB,GACAY,EAEElC,EAFFkC,OACAlB,EACEhB,EADFgB,QAGF,OACE,yBAAKN,UAAU,OACb,kBAAC,EAAD,CACEwB,OAAQA,IAEV,wBAAIxB,UAAU,YACX0B,EAAWE,KAAI,SAACC,GAAD,OACd,wBAAI7B,UAAS,kCAA6B6B,EAAUlB,KAAvC,YAA+CkB,EAAUjB,IAAMkB,IAAG,yBAAoBD,EAAUlB,KAA9B,YAAsCkB,EAAUjB,KAC7H,kBAAC,EAAD,iBAAmBiB,EAAnB,CAA8Bf,UAAWF,EAAIN,QAASA,WAiBlEmB,EAAWf,aAAe,CACxBE,GAAI,KACJY,OAAQ,GACRlB,QAAS,cAGImB,Q,eC7CTM,EAAa,CACjBC,IAAK,SAACC,EAAMC,GAAP,OAAgBC,OAAOC,WAAWH,GAAQE,OAAOC,WAAWF,IACjEG,SAAU,SAACJ,EAAMC,GAAP,OAAgBC,OAAOC,WAAWH,GAAQE,OAAOC,WAAWF,IACtEI,SAAU,SAACL,EAAMC,GAAP,OAAgBC,OAAOC,WAAWH,GAAQE,OAAOC,WAAWF,IACtEK,OAAQ,SAACN,EAAMC,GAAP,OAAgBC,OAAOC,WAAWH,GAAQE,OAAOC,WAAWF,KAGhEM,EAAa,CACjBC,QAAS,SAACC,EAAOC,GAAa,IAE1BnB,EACEkB,EADFlB,OAGAZ,EACE+B,EADF/B,GAGGY,GAKHkB,EAAM9B,GAAKA,EACX8B,EAAME,WAAapB,IALnBkB,EAAM9B,GAAK,KACX8B,EAAME,WAAa,GACnBF,EAAMlB,OAAS,IAMjBkB,EAAMG,SAAW,MAEnBC,WAAY,SAAAJ,GAAU,IAElBlB,EACEkB,EADFlB,OAGFkB,EAAM9B,GAAK,KAENY,IAELkB,EAAMlB,QAAUW,OAAOC,WAAWZ,GAAU,KAAKuB,WACjDL,EAAMG,SAAW,OAEnBG,MAAO,SAAAN,GAAU,IAEb9B,EAGE8B,EAHF9B,GACAY,EAEEkB,EAFFlB,OACAoB,EACEF,EADFE,WAGF,GAAKhC,GAAOY,EAAZ,CAEA,IAAIyB,EAAQlB,EAAWnB,GAAMmB,EAAWnB,GAAIgC,EAAYpB,GAAU,GAClEyB,EAAQA,EAAMC,eAAe,QAAS,CACpCC,sBAAuB,EACvBC,sBAAuB,KAGzBV,EAAM9B,GAAK,KACX8B,EAAMlB,OAASyB,EACfP,EAAME,WAAaK,EACnBP,EAAMG,SAAW,OAEnBQ,MAAO,SAAAX,GACLA,EAAM9B,GAAK,KACX8B,EAAMlB,OAAS,GACfkB,EAAME,WAAa,GACnBF,EAAMG,SAAW,MAEnBS,KAAM,SAAAZ,GAAU,IAEZlB,EACEkB,EADFlB,OAGFkB,EAAM9B,GAAK,KACX8B,EAAMlB,OAAiC,IAAxBA,EAAO+B,QAAQ,KAAa/B,EAAOgC,QAAQ,IAAK,IAAhD,WAA0DhC,GACzEkB,EAAMG,SAAW,QAIfY,EAAc,CAClBhB,QAAS,SAACC,GAAyB,IAAlBC,EAAiB,uDAAP,GAEvBnB,EAEEkB,EAFFlB,OACAqB,EACEH,EADFG,SAGAjC,EACE+B,EADF/B,GAEEqB,EAAOT,EAEM,OAAbqB,GAAgC,MAAXrB,IACvBS,EAAO,IAGTS,EAAMlB,OAAN,UAAkBS,GAAlB,OAAyBrB,IAE3B8C,IAAK,SAAAhB,GAAU,IAEXlB,EACEkB,EADFlB,OAEES,EAAOT,EACPkC,EAAM,GAELlC,IACHS,EAAO,IACPyB,EAAM,MAGqB,IAAzBlC,EAAO+B,QAAQ,OAAaG,EAAM,KAEtChB,EAAMlB,OAAN,UAAiBS,GAAjB,OAAwByB,KAIfC,EAAqB,CAChCC,IAAK,SAAClB,EAAOmB,GAAY,IAAD,EAIlBA,EAAOlB,QAFThC,EAFoB,EAEpBA,KACAC,EAHoB,EAGpBA,IAEc6C,EAAY7C,GAAM6C,EAAY7C,GAAM6C,EAAYhB,SAExDC,EAAOmB,EAAOlB,SACtBD,EAAMG,SAAWlC,GAEnBC,GAAI,SAAC8B,EAAOmB,GAAY,IAEpBjD,EACEiD,EAAOlB,QADT/B,IAEc4B,EAAW5B,GAAM4B,EAAW5B,GAAM4B,EAAWC,SAErDC,EAAOmB,EAAOlB,WAIbmB,EAAkBC,YAAY,CACzCC,KAAM,YACNC,aAAc,CACZrD,GAAI,KACJY,OAAQ,GACRoB,WAAY,GACZC,SAAU,MAEZqB,SAAS,eACJP,KAIMQ,EAAoBL,EAAgBM,QAEpCC,EAAmB,SAAA3B,GAAK,OAAIA,EAAM4B,YAEhCR,IAAf,QC7GeS,MArCf,WAA2B,IAAD,EACJpG,mBAAS,MADL,mBACjByC,EADiB,KACb4D,EADa,OAEIrG,mBAAS,IAFb,mBAEjBqD,EAFiB,KAETiD,EAFS,OAGYtG,mBAAS,IAHrB,mBAGjByE,EAHiB,KAGL8B,EAHK,OAIQvG,mBAAS,MAJjB,mBAIjB0E,EAJiB,KAIP8B,EAJO,KA4BxB,OACE,kBAAC,EAAD,CACEnD,OAAQA,EACRZ,GAAIA,EACJN,QA1BmB,SAACR,EAAG8E,GAAU,IAEjCjE,EACEiE,EADFjE,KAEE+B,EAAQ,CACV9B,KACAY,SACAoB,aACAC,YAEEgB,EAAS,CACXlB,QAASiC,GAGXjB,EAAmBhD,IAASgD,EAAmBhD,GAAM+B,EAAOmB,GAExDnB,EAAM9B,KAAOA,GAAI4D,EAAM9B,EAAM9B,IAC7B8B,EAAMlB,SAAWA,GAAQiD,EAAU/B,EAAMlB,QACzCkB,EAAME,aAAeA,GAAY8B,EAAchC,EAAME,YACrDF,EAAMG,WAAaA,GAAU8B,EAAYjC,EAAMG,cCRxCgC,EAjBa,SAACvF,GAAW,IAEpCN,EAEEM,EAFFN,YACAI,EACEE,EADFF,WAGF,OACE,kBAAC,EAAD,CACEJ,YAAaA,EACbI,WAAYA,GAEZ,kBAAC,EAAD,S,OCkBS0F,MAzBf,WAA4B,IAAD,EAIrBC,YAAYV,GAFd7C,EAFuB,EAEvBA,OACAZ,EAHuB,EAGvBA,GAEIoE,EAAWC,cAWjB,OACE,kBAAC,EAAD,CACEzD,OAAQA,EACRZ,GAAIA,EACJN,QAbmB,SAACR,EAAG8E,GAAU,IAEjCjE,EACEiE,EADFjE,KAEIkD,EAASM,EAAkBxD,GAEjCqE,EAASnB,GAAUA,EAAOe,QCAfM,EAjBc,SAAC5F,GAAW,IAErCN,EAEEM,EAFFN,YACAI,EACEE,EADFF,WAGF,OACE,kBAAC,EAAD,CACEJ,YAAaA,EACbI,WAAYA,GAEZ,kBAAC,EAAD,S,uBCNN+F,IAAWC,cAAc,SAoCVC,MAlCf,WAAgB,IACNjH,EAASF,IAATE,KADK,EAMTU,IAHFE,EAHW,EAGXA,YACAE,EAJW,EAIXA,UACAE,EALW,EAKXA,WALW,EAWTN,IAHWwG,EARF,EAQXtG,YACWuG,EATA,EASXrG,UACYsG,EAVD,EAUXpG,WAGF,OACE,kBAACpB,EAAkByH,SAAnB,CAA4BC,MAAOtH,GACjC,yBAAK4B,UAAU,OACb,4BAAQA,UAAU,cAChB,yBAAK2F,IAAKC,IAAM5F,UAAU,WAAW6F,IAAI,SACzC,4BAAQvF,QAASpB,GAAjB,iBACA,4BAAQoB,QAASiF,GAAjB,wBAEF,kBAAC,EAAD,CACEvG,YAAaA,EACbI,WAAYA,IAEd,kBAAC,EAAD,CACEJ,YAAasG,EACblG,WAAYoG,OCpCPM,cAAe,CAC5BC,QAAS,CACPzB,WAAY0B,KCOIC,QACW,cAA7BzH,OAAO0H,SAASC,UAEe,UAA7B3H,OAAO0H,SAASC,UAEhB3H,OAAO0H,SAASC,SAASC,MACvB,2DCVNC,IAASC,OACP,kBAAC,IAAMC,WAAP,KACE,kBAAC,IAAD,CAAUC,MAAOA,GACf,kBAAC,EAAD,QAGJC,SAASC,eAAe,SDqHpB,kBAAmBC,WACrBA,UAAUC,cAAcC,MACrBC,MAAK,SAAAC,GACJA,EAAaC,gBAEdC,OAAM,SAAAC,GACLC,QAAQD,MAAMA,EAAME,c","file":"static/js/main.848183f3.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.5d5d9eef.svg\";","import { useEffect, useState, createContext } from 'react'\nimport debounce from 'debounce'\n\nconst initSize = {\n  width: 0,\n  height: 0\n}\nexport const WindowSizeContext = createContext(initSize)\n\nfunction useWindowSize() {\n  const [size, setSize] = useState(initSize)\n\n  useEffect(() => {\n    function updateSize() {\n      setSize({\n        width: window.innerWidth,\n        height: window.innerHeight,\n      })\n    }\n\n    window.addEventListener('resize', debounce(updateSize), 500)\n    updateSize()\n\n    return () => window.removeEventListener('resize', updateSize)\n  }, [])\n\n  return {\n    size,\n    WindowSizeContext,\n  }\n}\n\nexport default useWindowSize\n","import { useState, useCallback } from 'react'\n\nfunction useModal(initState = false) {\n  const [modalIsOpen, setIsOpen] = useState(initState)\n\n  const openModal = useCallback(() => {\n    setIsOpen(true)\n  }, [setIsOpen])\n\n  const closeModal = useCallback(() => {\n    setIsOpen(false)\n  }, [setIsOpen])\n\n  return {\n    modalIsOpen,\n    openModal,\n    closeModal,\n    setIsOpen,\n  }\n}\n\nexport default useModal\n","import React, { useContext, useCallback } from 'react'\nimport PropTypes from 'prop-types'\nimport ReactModal from 'react-modal'\nimport Draggable from 'react-draggable'\n\nimport { WindowSizeContext } from '../../../hooks/useWindowSize'\nimport './CalculatorModal.scss'\n\nconst CalculatorModal = (props) => {\n  const { width } = useContext(WindowSizeContext)\n  const isDisableDraggable = width <= 768\n  const dragContainerPosition = isDisableDraggable ? { x: 0, y:0 } : null\n  const {\n    modalIsOpen,\n    closeModal,\n    children,\n  } = props\n\n  const handleModalClose = useCallback((e) => {\n    if (e.target.className !== 'calculator-draggable-container') return\n\n    closeModal()\n  }, [closeModal])\n\n  return (\n    <ReactModal\n      isOpen={modalIsOpen}\n      shouldCloseOnOverlayClick={true}\n      onRequestClose={closeModal}\n      contentLabel=\"Calculator Modal\"\n      className=\"calculator-content\"\n      overlayClassName=\"calculator-overlay\"\n    >\n      <div className=\"calculator-draggable-container\"\n        onClick={handleModalClose}\n        >\n        <Draggable\n          bounds=\"parent\"\n          disabled={isDisableDraggable}\n          position={dragContainerPosition}\n        >\n          <div>\n            {children}\n          </div>\n        </Draggable>\n      </div>\n    </ReactModal>\n  )\n}\n\nCalculatorModal.propTypes = {\n  modalIsOpen: PropTypes.bool,\n}\n\nCalculatorModal.defaultProps = {\n  modalIsOpen: false,\n  closeModal: () => {},\n}\n\nexport default CalculatorModal\n","export default {\n  btns: [\n    {\n      type: 'op',\n      op: 'clear',\n      children: 'AC',\n    },\n    {\n      type: 'op',\n      op: 'sign',\n      children: '+/-',\n    },\n    {\n      type: 'op',\n      op: 'percentage',\n      children: '%',\n    },\n    {\n      type: 'op',\n      op: 'divide',\n      children: '/',\n    },\n    {\n      type: 'num',\n      op: 7,\n    },\n    {\n      type: 'num',\n      op: 8,\n    },\n    {\n      type: 'num',\n      op: 9,\n    },\n    {\n      type: 'op',\n      op: 'multiply',\n      children: 'x',\n    },\n    {\n      type: 'num',\n      op: 4,\n    },\n    {\n      type: 'num',\n      op: 5,\n    },\n    {\n      type: 'num',\n      op: 6,\n    },\n    {\n      type: 'op',\n      op: 'subtract',\n      children: '-',\n    },\n    {\n      type: 'num',\n      op: 1,\n    },\n    {\n      type: 'num',\n      op: 2,\n    },\n    {\n      type: 'num',\n      op: 3,\n    },\n    {\n      type: 'op',\n      op: 'add',\n      children: '+',\n    },\n    {\n      type: 'num',\n      op: 0,\n    },\n    {\n      type: 'num',\n      op: 'dot',\n      children: '.',\n    },\n    {\n      type: 'op',\n      op: 'equal',\n      children: '=',\n    },\n  ]\n}\n","import React, { useCallback } from 'react'\nimport PropTypes from 'prop-types'\nimport ClassNames from 'classnames'\nimport './CalculatorBtn.scss'\n\nfunction CalculatorBtn(props) {\n  const {\n    children,\n    type,\n    op,\n    currentOp,\n    style,\n    onClick,\n  } = props\n  const content = children || op\n  const btnClassName = ClassNames(\n    'cal-btn',\n    {\n      [`cal-btn__${type}`]: !!type,\n      'cal-btn__op-selected': currentOp === op,\n    },\n  )\n\n  const onClickHandler = useCallback((e) => {\n    e.preventDefault()\n    onClick(e,\n      {\n        type,\n        op,\n      }\n    )\n  }, [type, op, onClick])\n\n  return (content !== null) && (\n    <button className={btnClassName} onMouseUp={onClickHandler} onTouchEnd={onClickHandler} style={style}>\n      <div className=\"cal-btn__cnt\">\n        {content}\n      </div>\n    </button>\n  );\n}\n\nCalculatorBtn.propTypes = {\n  children: PropTypes.elementType,\n  type: PropTypes.oneOf(['op', 'num']),\n  op: PropTypes.oneOfType([\n    PropTypes.string,\n    PropTypes.number,\n  ]),\n  currentOp: PropTypes.string,\n  style: PropTypes.object,\n  onClick: PropTypes.func,\n}\n\nCalculatorBtn.defaultProps = {\n  children: null,\n  onClick: () => {},\n}\n\nexport default CalculatorBtn","import React from 'react'\nimport PropTypes from 'prop-types'\nimport './CalculatorScreen.scss'\n\nfunction CalculatorScreen(props) {\n  const {\n    result,\n  } = props\n\n  return (\n    <div className=\"cal-screen\">\n      <div className=\"cal-screen__result\">{result}</div>\n    </div>\n  );\n}\n\nCalculatorScreen.propTypes = {\n  result: PropTypes.oneOfType([\n    PropTypes.number,\n    PropTypes.string,\n  ])\n}\n\nCalculatorScreen.defaultProps = {\n  result: null\n}\n\nexport default CalculatorScreen","import React from 'react'\nimport PropTypes from 'prop-types'\n\nimport configs from './configs'\nimport CalculatorBtn from './CalculatorBtn'\nimport CalculatorScreen from './CalculatorScreen'\nimport './Calculator.scss'\n\nfunction Calculator(props) {\n  const btnConfigs = configs.btns\n  const {\n    op,\n    result,\n    onClick,\n  } = props\n\n  return (\n    <div className=\"cal\">\n      <CalculatorScreen\n        result={result}\n      />\n      <ul className=\"cal-btns\">\n        {btnConfigs.map((btnConfig) => (\n          <li className={`cal-btns__item cal-btn__${btnConfig.type}-${btnConfig.op}`} key={`cal-btns__item-${btnConfig.type}-${btnConfig.op}`}>\n            <CalculatorBtn {...btnConfig} currentOp={op} onClick={onClick}/>\n          </li>\n        ))}\n      </ul>\n    </div>\n  );\n}\n\nCalculator.propTypes = {\n  op: PropTypes.string,\n  result: PropTypes.oneOfType([\n    PropTypes.string,\n    PropTypes.number,\n  ]),\n  onClick: PropTypes.func,\n}\n\nCalculator.defaultProps = {\n  op: null,\n  result: '',\n  onClick: () => {}\n}\n\nexport default Calculator","import { createSlice } from '@reduxjs/toolkit';\n\nconst operations = {\n  add: (prev, next) => Number.parseFloat(prev) + Number.parseFloat(next),\n  subtract: (prev, next) => Number.parseFloat(prev) - Number.parseFloat(next),\n  multiply: (prev, next) => Number.parseFloat(prev) * Number.parseFloat(next),\n  divide: (prev, next) => Number.parseFloat(prev) / Number.parseFloat(next),\n}\n\nconst opHandlers = {\n  default: (state, payload) => {\n    const {\n      result,\n    } = state\n    const {\n      op,\n    } = payload\n\n    if (!result) {\n      state.op = null\n      state.prevResult = ''\n      state.result = ''\n    } else {\n      state.op = op\n      state.prevResult = result\n    }\n\n    state.prevType = 'op'\n  },\n  percentage: state => {\n    const {\n      result\n    } = state\n\n    state.op = null\n\n    if (!result) return\n\n    state.result = (Number.parseFloat(result) / 100).toString()\n    state.prevType = 'op'\n  },\n  equal: state => {\n    const {\n      op,\n      result,\n      prevResult,\n    } = state\n\n    if (!op || !result) return\n\n    let final = operations[op] ? operations[op](prevResult, result) : ''\n    final = final.toLocaleString('en-US', {\n      minimumFractionDigits: 0,\n      maximumFractionDigits: 10\n    })\n\n    state.op = null\n    state.result = final\n    state.prevResult = final\n    state.prevType = 'op'\n  },\n  clear: state => {\n    state.op = null\n    state.result = ''\n    state.prevResult = ''\n    state.prevType = 'op'\n  },\n  sign: state => {\n    const {\n      result,\n    } = state\n\n    state.op = null\n    state.result = result.indexOf('-') === 0 ? result.replace('-', '') : `-${result}`\n    state.prevType = 'num'\n  },\n}\n\nconst numHandlers = {\n  default: (state, payload = {}) => {\n    const {\n      result,\n      prevType,\n    } = state\n    const {\n      op,\n    } = payload\n    let prev = result\n\n    if (prevType === 'op' || result === '0') {\n      prev = ''\n    }\n\n    state.result = `${prev}${op}`\n  },\n  dot: state => {\n    const {\n      result,\n    } = state\n    let prev = result\n    let dot = ''\n\n    if (!result) { \n      prev = '0'\n      dot = '.'\n    }\n\n    if (result.indexOf('.') === -1) dot = '.'\n\n    state.result =`${prev}${dot}`\n  },\n}\n\nexport const calculatorHandlers = {\n  num: (state, action) => {\n    const {\n      type,\n      op,\n    } = action.payload\n    const handler = numHandlers[op] ? numHandlers[op] : numHandlers.default\n\n    handler(state, action.payload)\n    state.prevType = type\n  },\n  op: (state, action) => {\n    const {\n      op,\n    } = action.payload\n    const handler = opHandlers[op] ? opHandlers[op] : opHandlers.default\n\n    handler(state, action.payload)\n  },\n}\n\nexport const calculatorSlice = createSlice({\n  name: 'calcuator',\n  initialState: {\n    op: null,\n    result: '',\n    prevResult: '',\n    prevType: null,\n  },\n  reducers: {\n    ...calculatorHandlers,\n  },\n})\n\nexport const calculatorActions = calculatorSlice.actions\n\nexport const selectCalculator = state => state.calculator\n\nexport default calculatorSlice.reducer\n","import React, { useState } from 'react'\n\nimport Calculator from './index'\nimport { calculatorHandlers } from '../../redux/slices/calculator'\n\nfunction CalculatorHook() {\n  const [op, setOp] = useState(null)\n  const [result, setResult] = useState('')\n  const [prevResult, setPrevResult] = useState('')\n  const [prevType, setPrevType] = useState(null)\n\n  const onClickHandler = (e, data) => {\n    const {\n      type,\n    } = data\n    let state = {\n      op,\n      result,\n      prevResult,\n      prevType,\n    }\n    let action = {\n      payload: data\n    }\n\n    calculatorHandlers[type] && calculatorHandlers[type](state, action)\n\n    if (state.op !== op) setOp(state.op)\n    if (state.result !== result) setResult(state.result)\n    if (state.prevResult !== prevResult) setPrevResult(state.prevResult)\n    if (state.prevType !== prevType) setPrevType(state.prevType)\n  }\n\n  return (\n    <Calculator\n      result={result}\n      op={op}\n      onClick={onClickHandler}\n    />\n  )\n}\n\nexport default CalculatorHook\n","import React from 'react'\n\nimport CalculatorModal from './index'\nimport CalculatorHook from '../CalculatorHook'\n\nconst CalculatorHookModal = (props) => {\n  const {\n    modalIsOpen,\n    closeModal,\n  } = props\n\n  return (\n    <CalculatorModal\n      modalIsOpen={modalIsOpen}\n      closeModal={closeModal}\n    >\n      <CalculatorHook />\n    </CalculatorModal>\n  )\n  \n}\n\nexport default CalculatorHookModal\n","import React from 'react'\nimport { useSelector, useDispatch } from 'react-redux'\n\nimport Calculator from './index'\nimport {\n  calculatorActions,\n  selectCalculator,\n} from '../../redux/slices/calculator'\n\nfunction CalculatorRedux() {\n  const {\n    result,\n    op,\n  } = useSelector(selectCalculator)\n  const dispatch = useDispatch()\n\n  const onClickHandler = (e, data) => {\n    const {\n      type,\n    } = data\n    const action = calculatorActions[type]\n\n    dispatch(action && action(data))\n  }\n\n  return (\n    <Calculator\n      result={result}\n      op={op}\n      onClick={onClickHandler}\n    />\n  )\n}\n\nexport default CalculatorRedux\n","import React from 'react'\n\nimport CalculatorModal from './index'\nimport CalculatorRedux from '../CalculatorRedux'\n\nconst CalculatorReduxModal = (props) => {\n  const {\n    modalIsOpen,\n    closeModal,\n  } = props\n\n  return (\n    <CalculatorModal\n      modalIsOpen={modalIsOpen}\n      closeModal={closeModal}\n    >\n      <CalculatorRedux />\n    </CalculatorModal>\n  )\n  \n}\n\nexport default CalculatorReduxModal\n","import React from 'react'\nimport ReactModal from 'react-modal'\n\nimport useWindowSize, { WindowSizeContext } from './hooks/useWindowSize'\nimport useModal from './hooks/useModal'\nimport CalculatorHookModal from './components/Calculator/CalculatorModal/CalculatorHookModal'\nimport CalculatorReduxModal from './components/Calculator/CalculatorModal/CalculatorReduxModal'\nimport logo from './logo.svg'\nimport './App.scss'\n\nReactModal.setAppElement('#root')\n\nfunction App() {\n  const { size } = useWindowSize()\n  const {\n    modalIsOpen,\n    openModal,\n    closeModal,\n  } = useModal()\n  const {\n    modalIsOpen: reduxModalIsOpen,\n    openModal: openReduxModal,\n    closeModal: closeReduxModal,\n  } = useModal()\n\n  return (\n    <WindowSizeContext.Provider value={size}>\n      <div className=\"App\">\n        <header className=\"App-header\">\n          <img src={logo} className=\"App-logo\" alt=\"logo\" />\n          <button onClick={openModal}>Trigger Modal</button>\n          <button onClick={openReduxModal}>Trigger Redux Modal</button>\n        </header>\n        <CalculatorHookModal\n          modalIsOpen={modalIsOpen}\n          closeModal={closeModal}\n        />\n        <CalculatorReduxModal\n          modalIsOpen={reduxModalIsOpen}\n          closeModal={closeReduxModal}\n        />\n      </div>\n    </WindowSizeContext.Provider>\n  )\n}\n\nexport default App\n","import { configureStore } from '@reduxjs/toolkit'\nimport calculatorReducer from './slices/calculator'\n\nexport default configureStore({\n  reducer: {\n    calculator: calculatorReducer,\n  },\n})\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport './index.css'\nimport App from './App'\nimport store from './redux/store'\nimport { Provider } from 'react-redux'\nimport * as serviceWorker from './serviceWorker'\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <App />\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}